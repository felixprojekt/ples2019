//Used by main scss file with @import "mixins"; at the beginning of the file

// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}
 
// scale
@mixin scale($scale) {
    @include transform(scale($scale));
} 

@mixin scale-rotate($scale, $rotate) {
    @include transform(scale($scale) rotate($rotate));
} 

// translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}
//linear gradient
@mixin linear-gradient($args...) {
    background-image: -o-linear-gradient($args); 
    background-image: -moz-linear-gradient($args); 
    background-image: -webkit-linear-gradient($args);
    background-image: linear-gradient($args); 
}
//blur
@mixin blur($amount) {
    -webkit-filter: blur($amount);
    -moz-filter: blur($amount);
    -o-filter: blur($amount);
    -ms-filter: blur($amount);
    filter: blur($amount);
} 
//box-shadow
@mixin box-shadow($args...) {
    -webkit-box-shadow: $args;
    -moz-box-shadow: $args;
    box-shadow: $args;
}

/*
Animation mixin, use it with keyframes mixin, like: 
@include animation(neonGlow, 5s, infinite);
 */
@mixin animation($name, $duration, $iterations, $curve: ease-in-out) {
    -webkit-animation: $name $duration $iterations, $curve; /* Safari 4+ */
    -moz-animation:    $name $duration $iterations, $curve; /* Fx 5+ */
    -o-animation:      $name $duration $iterations, $curve; /* Opera 12+ */
    animation:         $name $duration $iterations, $curve; /* IE 10+, Fx 29+ */
}

/*
keyframes mixin, use it like: 
@include keyframes(neonGlow) {
    0% {
        background-color: #ffccf2;
    }
    50% {
        background-color: #ccffcc;
    }
    100% {
        background-color: #ccffff;
    } 
}
*/
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}

/*
  (TEXT) PARAMS
  =================
  1. Namespace
  2. Intensity
  3. Text color
  4. Background color (flat)
  5. Highlight #1 color
  6. Highlight #2 color
  7. Width (px)
  8. Height (px)
*/
@mixin textGlitch($name, $intensity, $textColor, $background, $highlightColor1, $highlightColor2, $width, $height) {
  
  color: $textColor;
  position: relative;
  $steps: $intensity;
  
  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i*(1/$steps))} {
            clip: rect(
              random($height)+px,
              $width+px,
              random($height)+px,
              0
            );
          }
        }
      }
    }
  }
  &:before,
  &:after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: $background;
    clip: rect(0, 0, 0, 0); 
  }
  &:after {
    left: 2px;
    text-shadow: -1px 0 $highlightColor1;
    animation: #{$name}-anim-1 2s infinite linear alternate-reverse;
  }
  &:before {
    left: -2px;
    text-shadow: 2px 0 $highlightColor2; 
    animation: #{$name}-anim-2 3s infinite linear alternate-reverse;
  }
  
}